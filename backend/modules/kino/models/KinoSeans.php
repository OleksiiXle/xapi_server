<?php

namespace backend\modules\kino\models;

use common\models\Functions;
use common\models\MainModel;
use Yii;

class KinoSeans extends MainModel
{
    public $dataText = '';

    private $_hallName;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'kino_seans';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['hall_id' ,'data', 'created_at', 'updated_at', 'reservations_count'], 'integer'],
            [['hall_id', 'cinema_hall'], 'required'],
            [['cinema_hall', 'dataText'], 'string'],
            [['filmName'], 'string', 'min' => 3, 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'filmName' => 'Название фильма',
            'hall_id' => 'Кинозал',
            'cinema_hall' => 'Кино-зал',
            'data' => 'Data',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'hallName' => 'Кинозал',
            'dataText' => 'Дата, время',
            'reservations_count' => 'Количество заказов билетов',
        ];
    }

    public function getHall()
    {
        return $this->hasOne(Kino::className(), ['id' => 'hall_id']);
    }

    /**
     * @return mixed
     */
    public function getHallName()
    {
        $this->_hallName = '';
        if (!empty($this->hall)){
            $this->_hallName = $this->hall->name;
        }
        return $this->_hallName;
    }



    public function saveSeans()
    {
        $i = 1;
        $hall = Kino::findOne($this->hall_id);
        $this->cinema_hall = $hall->cinema_hall;
        return $this->save();
    }

    public function afterFind()
    {
        $this->dataText = (isset($this->data)) ? Functions::intToDateTime($this->data) : '';
        parent::afterFind(); // TODO: Change the autogenerated stub
    }

    public function beforeValidate()
    {
        if (isset($this->dataText) && is_string($this->dataText) && $this->dataText !=''){
            $this->data = Functions::dateTimeToInt($this->dataText);
        }
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

}
